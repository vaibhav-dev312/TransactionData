//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransactionService.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TXN_DatabaseEntities : DbContext
    {
        public TXN_DatabaseEntities()
            : base("name=TXN_DatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Stp_GetTransactionsByCurrency_Result> Stp_GetTransactionsByCurrency(string currencyCode)
        {
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("currencyCode", currencyCode) :
                new ObjectParameter("currencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_GetTransactionsByCurrency_Result>("Stp_GetTransactionsByCurrency", currencyCodeParameter);
        }
    
        public virtual ObjectResult<Stp_GetTransactionsByDate_Result> Stp_GetTransactionsByDate(Nullable<System.DateTime> transactionFromDate, Nullable<System.DateTime> transactionToDate)
        {
            var transactionFromDateParameter = transactionFromDate.HasValue ?
                new ObjectParameter("transactionFromDate", transactionFromDate) :
                new ObjectParameter("transactionFromDate", typeof(System.DateTime));
    
            var transactionToDateParameter = transactionToDate.HasValue ?
                new ObjectParameter("transactionToDate", transactionToDate) :
                new ObjectParameter("transactionToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_GetTransactionsByDate_Result>("Stp_GetTransactionsByDate", transactionFromDateParameter, transactionToDateParameter);
        }
    
        public virtual ObjectResult<Stp_GetTransactionsByStatus_Result> Stp_GetTransactionsByStatus(string transactionStatus)
        {
            var transactionStatusParameter = transactionStatus != null ?
                new ObjectParameter("transactionStatus", transactionStatus) :
                new ObjectParameter("transactionStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_GetTransactionsByStatus_Result>("Stp_GetTransactionsByStatus", transactionStatusParameter);
        }
    }
}
